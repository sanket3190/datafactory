{
	"name": "MappingDimensionTables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQLSERVERCustomer",
						"type": "DatasetReference"
					},
					"name": "SQLSERVERCustomer"
				},
				{
					"dataset": {
						"referenceName": "SynapseCustomer",
						"type": "DatasetReference"
					},
					"name": "SynapseCustomer1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SynapseCustomer",
						"type": "DatasetReference"
					},
					"name": "SynapseCustomer",
					"rejectedDataLinkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					}
				},
				{
					"name": "CustomerSKSink"
				}
			],
			"transformations": [
				{
					"name": "surrogateKey1"
				},
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CustomerID as integer,",
				"          CompanyName as string,",
				"          SalesPerson as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT ct.[CustomerID],ct.[CompanyName],ct.[SalesPerson]\\n  FROM [SalesLT].[Customer] as ct ',",
				"     format: 'query') ~> SQLSERVERCustomer",
				"source(output(",
				"          MAXCUSTID as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     query: 'SELECT ISNULL(MAX(CustomerID),0) AS MAXCUSTID FROM [dbo].[DimCustomer]',",
				"     format: 'query',",
				"     staged: true) ~> SynapseCustomer1",
				"SQLSERVERCustomer keyGenerate(output(CUSTOMERID1 as long),",
				"     startAt: 1L,",
				"     stepValue: 1L) ~> surrogateKey1",
				"surrogateKey1 derive(CustomerSK = CustomerSKSink#outputs()[1].MAXCUSTID + CustomerID) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CustomerID as integer,",
				"          NameStyle as boolean,",
				"          Title as string,",
				"          FirstName as string,",
				"          MiddleName as string,",
				"          LastName as string,",
				"          Suffix as string,",
				"          CompanyName as string,",
				"          SalesPerson as string,",
				"          EmailAddress as string,",
				"          Phone as string,",
				"          PasswordHash as string,",
				"          PasswordSalt as string,",
				"          rowguid as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          CustomerID,",
				"          CompanyName,",
				"          SalesPerson",
				"     )) ~> SynapseCustomer",
				"SynapseCustomer1 sink(validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> CustomerSKSink"
			]
		}
	}
}